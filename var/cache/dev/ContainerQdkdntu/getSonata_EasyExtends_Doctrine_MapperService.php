<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'sonata.easy_extends.doctrine.mapper' shared service.

include_once $this->targetDirs[3].'\\vendor\\doctrine\\common\\lib\\Doctrine\\Common\\EventSubscriber.php';
include_once $this->targetDirs[3].'\\vendor\\sonata-project\\easy-extends-bundle\\src\\Mapper\\DoctrineORMMapper.php';

$this->services['sonata.easy_extends.doctrine.mapper'] = $instance = new \Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper(${($_ = isset($this->services['doctrine']) ? $this->services['doctrine'] : $this->getDoctrineService()) && false ?: '_'}, array());

$instance->addAssociation('Application\\Sonata\\UserBundle\\Entity\\User', 'mapManyToMany', array(0 => array('fieldName' => 'groups', 'targetEntity' => 'Application\\Sonata\\UserBundle\\Entity\\Group', 'cascade' => array(), 'joinTable' => array('name' => 'my_custom_user_group_association_table_name', 'joinColumns' => array(0 => array('name' => 'user_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'inverseJoinColumns' => array(0 => array('name' => 'group_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE'))))));
$instance->addAssociation('Application\\Sonata\\PageBundle\\Entity\\Page', 'mapOneToMany', array(0 => array('fieldName' => 'children', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Page', 'cascade' => array(0 => 'persist'), 'mappedBy' => 'parent', 'orphanRemoval' => false, 'orderBy' => array('position' => 'ASC')), 1 => array('fieldName' => 'blocks', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Block', 'cascade' => array(0 => 'remove', 1 => 'persist', 2 => 'refresh', 3 => 'merge', 4 => 'detach'), 'mappedBy' => 'page', 'orphanRemoval' => false, 'orderBy' => array('position' => 'ASC')), 2 => array('fieldName' => 'sources', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Page', 'cascade' => array(), 'mappedBy' => 'target', 'orphanRemoval' => false)));
$instance->addAssociation('Application\\Sonata\\PageBundle\\Entity\\Page', 'mapManyToOne', array(0 => array('fieldName' => 'site', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Site', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => NULL, 'joinColumns' => array(0 => array('name' => 'site_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'orphanRemoval' => false), 1 => array('fieldName' => 'parent', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Page', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => 'children', 'joinColumns' => array(0 => array('name' => 'parent_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'orphanRemoval' => false), 2 => array('fieldName' => 'target', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Page', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => 'sources', 'joinColumns' => array(0 => array('name' => 'target_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'orphanRemoval' => false)));
$instance->addAssociation('Application\\Sonata\\PageBundle\\Entity\\Block', 'mapOneToMany', array(0 => array('fieldName' => 'children', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Block', 'cascade' => array(0 => 'remove', 1 => 'persist'), 'mappedBy' => 'parent', 'orphanRemoval' => true, 'orderBy' => array('position' => 'ASC'))));
$instance->addAssociation('Application\\Sonata\\PageBundle\\Entity\\Block', 'mapManyToOne', array(0 => array('fieldName' => 'parent', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Block', 'cascade' => array(), 'mappedBy' => NULL, 'inversedBy' => 'children', 'joinColumns' => array(0 => array('name' => 'parent_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'orphanRemoval' => false), 1 => array('fieldName' => 'page', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Page', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => 'blocks', 'joinColumns' => array(0 => array('name' => 'page_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'orphanRemoval' => false)));
$instance->addAssociation('Application\\Sonata\\PageBundle\\Entity\\Snapshot', 'mapManyToOne', array(0 => array('fieldName' => 'site', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Site', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => NULL, 'joinColumns' => array(0 => array('name' => 'site_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'orphanRemoval' => false), 1 => array('fieldName' => 'page', 'targetEntity' => 'Application\\Sonata\\PageBundle\\Entity\\Page', 'cascade' => array(0 => 'persist'), 'mappedBy' => NULL, 'inversedBy' => NULL, 'joinColumns' => array(0 => array('name' => 'page_id', 'referencedColumnName' => 'id', 'onDelete' => 'CASCADE')), 'orphanRemoval' => false)));
$instance->addIndex('Application\\Sonata\\PageBundle\\Entity\\Snapshot', 'idx_snapshot_dates_enabled', array(0 => 'publication_date_start', 1 => 'publication_date_end', 2 => 'enabled'));
$instance->addIndex('Application\\Sonata\\NotificationBundle\\Entity\\Message', 'idx_state', array(0 => 'state'));
$instance->addIndex('Application\\Sonata\\NotificationBundle\\Entity\\Message', 'idx_created_at', array(0 => 'created_at'));

return $instance;
